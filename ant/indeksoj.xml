<project name="voko-indeksoj" default="tuto" basedir=".">
    <description>
       Reta Vortaro, reguloj por (re)krei indeksojn. 
    </description>

  <!-- legu agorditajn variablojn el dosiero -->
  <property file="${user.dir}/cfg/agordo" prefix="v."/>

  <!-- donu valorojn al la variabloj, se ili ne jam aperis en la agordo-dosiero -->
  <property environment="ENV"/>
  <property name="v.voko" location="${ENV.VOKO}"/>
  <!-- property name="v.saxon" location="${ENV.SAXON}/saxon8.jar"/ -->
  <property name="v.xalan" location="${ENV.XALAN}/xalan-j2.jar"/>
  <property name="v.xalan-ser" location="${ENV.XALAN}/xalan-j2-serializer.jar"/>
  <property name="v.voko.ant" location="${v.voko}/ant"/>
  <property name="v.bazo" location="${user.dir}"/>
  <property name="v.bazo.inx" location="${v.bazo}/inx"/>
  <property name="v.bazo.xml" location="${v.bazo}/xml"/>
  <property name="v.voko.bin" location="${v.voko}/bin"/>
  <property name="v.voko.xsl" location="${v.voko}/xsl"/>
  <property name="v.fonto" location="${user.home}/revo-fonto"/>
  <!-- property name="tmp" location="/home/revo/tmp/inx_tmp"/ -->
  <property name="v.tmp" location="${v.bazo}/.tmp"/>
  <property name="v.outputformat" value="html"/>
  <property name="v.cfg" value="${user.dir}/cfg"/>

  <property name="jing.jar" location="/usr/share/java/jing.jar"/>
  <property name="jing.class" value="com.thaiopensource.relaxng.util.Driver"/>
  <property name="jing.errors.txt" location="${v.tmp}/relax_eraroj.txt"/>
  <property name="jing.errors.xml" location="${v.tmp}/relax_eraroj.xml"/>
  <property name="jing.errors.html" location="${v.tmp}/inx/relax_eraroj.html"/>
  <property name="jing2xml" location="${v.voko.bin}/jing2xml.sh"/>
  <property name="gitlogxml2w" location="${v.voko.bin}/gitlogxml2w.sh"/>
  <property name="viki_listo" location="${v.voko.bin}/viki_listo.sh"/>
  <property name="voko-relax" location="${v.voko}/dtd/vokoxml.rnc"/>

  <property name="saxon" location="${ENV.SAXONJAR}"/> 
  <!-- property name="saxon" location="/usr/share/java/saxon9.jar"/ -->

  <!-- ial Formiko foje ne trovas Saxon per klaspado donita en la tasko mem,
      tial difinu mediovariablon CLASSPATH aldonante la Saxon-arkivon antau voki Formikon -->
  <path id="saxon.classpath">
     <pathelement location="${saxon}"/>
     <pathelement location="${v.voko.ant}/respiro.jar"/>
     <pathelement path="${java.class.path}"/>
  </path>

  <target name="inx-agordo" description="eligas la agordeblajn variablojn por kontrolo">
    <echoproperties prefix="v."/> 
  </target>
     

  <target name="inx-preparo">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${v.bazo.inx}" />
    <mkdir dir="${v.tmp}" />
    <mkdir dir="${v.tmp}/inx" />

    <!-- (re)kreu inx_ordigo2.inc laubezone -->
    <!-- ne plu uzu: <xslt in="${v.voko}/cfg/ordigo2.xml" out="${v.voko.xsl}/inx_ordigo2.inc"
       style="${v.voko.xsl}/inc_ordigo2.xsl"/ -->

    <!-- chu necesas refari la dosieron indekso.xml? -->
    <uptodate property="indekso.aktuala">
      <srcfiles dir="${v.bazo.xml}" includes="*.xml"/>
      <mapper type="merge" to="${v.tmp}/indekso.xml"/>
    </uptodate>

    <!-- chu necesas refari la dosieron eraroj.xml? -->
    <uptodate property="eraroj.aktuala">
      <srcfiles dir="${v.bazo.xml}" includes="*.xml"/>
      <mapper type="merge" to="${v.tmp}/eraroj.xml"/>
    </uptodate>

  </target>

  <target name="inx-forigo" 
      description="forigas chiujn dosierojn en ${v.tmp}/inx"
      depends="inx-preparo">
 
     <delete>
        <fileset dir="${v.tmp}/inx" includes="*"/>
     </delete>
  </target>

  <target name="inx-eltiro" unless="indekso.aktuala"
    description="faras la dosieron indekso.xml el chiuj artikoloj kiel bazo por chiuj indeksoj" 
    depends="inx-preparo">

    <java classname="de.steloj.respiro.DirectoryTransformer"
     logError="true">
         <!-- arg value="-v"/ -->
         <arg path="${v.bazo.xml}"/>
         <arg file="${v.voko.xsl}/inx_eltiro.xsl"/>
         <arg file="${v.tmp}/indekso.xml"/>
         <classpath>
           <pathelement location="${v.voko.ant}/respiro.jar"/>
           <pathelement path="${java.class.path}"/>
           <pathelement location="${v.xalan-ser}"/>
       </classpath>
    </java>

  </target>

  <target name="inx-kontrolu-mrk" depends="inx-preparo,inx-eltiro"
     description="eltiras la markojn el la indeks-dosiero kaj kontrolas unikecon">
     <xslt in="${v.tmp}/indekso.xml" out="${v.tmp}/inx_mrk.xml"  style="${v.voko.xsl}/inx_markoj.xsl"/>
<!--       classpathref="saxon.classpath">
        <factory name="net.sf.saxon.TransformerFactoryImpl"/>
      </xslt> -->
      <exec executable="bash">
        <arg value="-c"/>
        <arg value="echo 'trovi duoblajn markojn en ${v.tmp}/inx_mrk.xml...'; sort ${v.tmp}/inx_mrk.xml | uniq -cd"/>
      </exec>

      <exec executable="bash">
        <arg value="-c"/>
        <arg value="echo 'trovi malplenajn markojn en ${v.tmp}/inx_mrk.xml...'; grep '&quot;&quot;'  ${v.tmp}/inx_mrk.xml"/>
      </exec>

  </target>  

  <target name="inx-kategorioj" depends="inx-preparo,inx-eltiro"
     description="eltiri la kapvortojn, tradukojn, fakindikojn ktp. el la indeks-dosiero">
     <xslt in="${v.tmp}/indekso.xml" out="${v.tmp}/inx_kat.xml"  style="${v.voko.xsl}/inx_kategorioj.xsl"/>
<!--       classpathref="saxon.classpath">
        <factory name="net.sf.saxon.TransformerFactoryImpl"/>
      </xslt> -->
      
  </target>

  <target name="inx-ordigo" depends="inx-preparo,inx-kategorioj"
     description="ordigi la kapvortojn, tradukojn, fakojn ktp.">
     <xslt in="${v.tmp}/inx_kat.xml" out="${v.tmp}/inx_ord.xml"
       style="${v.voko.xsl}/inx_ordigo2.xsl" classpathref="saxon.classpath">
        <!-- classpathref >
          <pathelement location="${SAXONJAR}"/>
          <pathelement path="${java.class.path}"/>
        </classpath -->
        <factory name="net.sf.saxon.TransformerFactoryImpl"/>
      </xslt>
  </target>


  <target name="inx-html" depends="inx-preparo,inx-ordigo"
     description="kreas la HTML-dosierojn de la indeksoj">

    <filter token="format" value="${v.outputformat}"/>
    <copy file="${v.voko.xsl}/inx_html.xsl" tofile="${v.voko.xsl}/inx_html_${v.outputformat}.xsl~" 
       filtering="true"/>

     <xslt in="${v.tmp}/inx_ord.xml" out="${v.tmp}/inx/.tempo"
        style="${v.voko.xsl}/inx_html_${v.outputformat}.xsl~"
        classpathref="saxon.classpath">
        <param name="agordo-pado" expression="${v.cfg}"/>
        <factory name="net.sf.saxon.TransformerFactoryImpl">
          <attribute name="http://saxon.sf.net/feature/allow-external-functions" 
                     value="true"/>      
        </factory>
     </xslt>
  </target>


  <target name="inx-oficialaj" depends="inx-preparo,inx-eltiro"
     description="kolekti la oficialajn radikojn el la indeks-dosiero">
     <xslt in="${v.tmp}/indekso.xml" out="${v.tmp}/inx_ofc.xml"  style="${v.voko.xsl}/inx_ofc.xsl"
       classpathref="saxon.classpath">
        <factory name="net.sf.saxon.TransformerFactoryImpl"/>
      </xslt>
  </target>



  <target name="inx-cvs"
     description="kreas raporton pri la lastaj sanĝoj per CVS">

     <cvschangelog dir="${v.bazo.xml}"
                destfile="${v.tmp}/inx_shanghoj.xml"
                daysinpast="14"     
     />

    <!-- kreu paĝon de ŝanĝitaj kaj de novaj artikoloj (ambaŭ per sama xslt) -->
     <xslt in="${v.tmp}/inx_shanghoj.xml" out="${v.tmp}/inx/shanghoj.html"
           style="${v.voko.xsl}/inx_shanghoj.xsl" classpathref="saxon.classpath">
        <param name="agordo-pado" expression="${v.cfg}"/>
        <factory name="net.sf.saxon.TransformerFactoryImpl">
          <attribute name="http://saxon.sf.net/feature/allow-external-functions" 
                     value="true"/>      
        </factory>
     </xslt>

     <tstamp>
       <format property="kreodato"
               pattern="yyyy-MM-dd"/>
     </tstamp>

     <xslt in="${v.tmp}/inx_shanghoj.xml" out="${v.tmp}/inx/revo_shanghoj.rss"
       style="${v.voko.xsl}/rss_shanghoj.xsl" classpathref="saxon.classpath">
        <param name="agordo-pado" expression="${v.cfg}"/>
	      <param name="kreotempo" expression="${kreodato}"/>
        <factory name="net.sf.saxon.TransformerFactoryImpl"/>
     </xslt> 
     <xslt in="${v.tmp}/inx_shanghoj.xml" out="${v.tmp}/inx/revo_novaj.rss"
        style="${v.voko.xsl}/rss_shanghoj.xsl" classpathref="saxon.classpath">
        <param name="agordo-pado" expression="${v.cfg}"/>
	      <param name="kreotempo" expression="${kreodato}"/>
	      <param name="channel" expression="novaj"/>
        <factory name="net.sf.saxon.TransformerFactoryImpl"/>
     </xslt> 
  </target>


  <target name="inx-git" depends="inx-preparo"
     description="kreas raporton pri la lastaj ŝanĝoj el Git">

     <exec executable="${gitlogxml2w}" dir="${v.fonto}"
        output="${v.tmp}/inx_shanghoj.xml"
        logError="true"
     />

    <!-- kreu paĝon de ŝanĝitaj kaj de novaj artikoloj (ambaŭ per sama xslt) -->
     <xslt in="${v.tmp}/inx_shanghoj.xml" out="${v.tmp}/inx/shanghoj.html"
       style="${v.voko.xsl}/inx_shanghoj.xsl" classpathref="saxon.classpath">
         <param name="agordo-pado" expression="${v.cfg}"/>
         <factory name="net.sf.saxon.TransformerFactoryImpl">
            <attribute name="http://saxon.sf.net/feature/allow-external-functions" 
                     value="true"/>      
         </factory>
     </xslt>

     <tstamp>
       <format property="kreodato"
               pattern="yyyy-MM-dd"/>
     </tstamp>

     <xslt in="${v.tmp}/inx_shanghoj.xml" out="${v.tmp}/inx/revo_shanghoj.rss"
       style="${v.voko.xsl}/rss_shanghoj.xsl" classpathref="saxon.classpath">
        <param name="agordo-pado" expression="${v.cfg}"/>
	      <param name="kreotempo" expression="${kreodato}"/>
        <factory name="net.sf.saxon.TransformerFactoryImpl"/>
     </xslt> 
     <xslt in="${v.tmp}/inx_shanghoj.xml" out="${v.tmp}/inx/revo_novaj.rss"
        style="${v.voko.xsl}/rss_shanghoj.xsl" classpathref="saxon.classpath">
        <param name="agordo-pado" expression="${v.cfg}"/>
	      <param name="kreotempo" expression="${kreodato}"/>
	      <param name="channel" expression="novaj"/>
        <factory name="net.sf.saxon.TransformerFactoryImpl"/>
     </xslt> 
  </target>


  <target name="inx-eraroj" depends="inx-preparo" unless="eraroj.aktuala"
     description="kreas raporton pri diversaj eraroj en la artikoloj">

     <java classname="de.steloj.respiro.DirectoryTransformerSaxon"
       logError="true">
         <!-- arg value="-v"/ -->
         <!-- arg value="-Dhttp://saxon.sf.net/feature/allow-external-functions=true"/ -->
         <arg value="-p"/>
         <arg value="agordo-pado=${v.cfg}"/>
         <arg path="${v.bazo.xml}"/>
         <arg file="${v.voko.xsl}/inx_eraroj.xsl"/>
         <arg file="${v.tmp}/eraroj.xml"/>
         <classpath>
           <pathelement location="${saxon}"/>
	         <pathelement location="${v.voko.ant}/respiro.jar"/>
           <pathelement path="${java.class.path}"/>
       </classpath>
    </java>


    <xslt in="${v.tmp}/eraroj.xml" out="${v.tmp}/inx/eraroj.html"
       style="${v.voko.xsl}/inx_eraroj_html.xsl"
       classpathref="saxon.classpath">
         <param name="agordo-pado" expression="${v.cfg}"/>
        <factory name="net.sf.saxon.TransformerFactoryImpl">
            <attribute name="http://saxon.sf.net/feature/allow-external-functions" 
                     value="true"/>      
        </factory>
     </xslt>
  </target>
    
  <target name="inx-eraroj-test" depends="inx-preparo">
    <xslt in="${v.tmp}/eraroj.xml" out="${v.tmp}/inx/eraroj.html"
       style="${v.voko.xsl}/inx_eraroj_html.xsl"
       classpathref="saxon.classpath">
         <param name="agordo-pado" expression="${v.cfg}"/>
        <factory name="net.sf.saxon.TransformerFactoryImpl"/>
     </xslt>
  </target>


  <target name="inx-relax" depends="inx-preparo"
    description="kontrolas la artikolojn per RelaxNG difinioj, kiuj estas pli striktaj ol DTD">
    
    <fileset dir="${v.bazo.xml}" id="xml-oj">
        <include name="*.xml" />
    </fileset>
    <pathconvert property="artikoloj" refid="xml-oj" pathsep=" " />


    <java classpath="${jing.jar}" classname="${jing.class}"
        fork="true"	output="${jing.errors.txt}">
      <arg value="-c"/>
      <arg file="${voko-relax}"/>
      <arg line="${artikoloj}"/>
    </java>

   <!-- debug -->
    <exec executable="cat">
      <arg file="${jing.errors.txt}"/>
    </exec>

    <exec executable="bash"
        output = "${jing.errors.xml}">
      <arg file="${jing2xml}"/>
      <arg file="${jing.errors.txt}"/>
    </exec>

    <xslt in="${jing.errors.xml}" out="${jing.errors.html}"
       style="${v.voko.xsl}/inx_relax_html.xsl"
       classpathref="saxon.classpath">
         <param name="agordo-pado" expression="${v.cfg}"/>
        <factory name="net.sf.saxon.TransformerFactoryImpl"/>
    </xslt>
  </target>

  <target name="inx-viki-listo" depends="inx-preparo,inx-kategorioj"
     description="eltiras la markojn el la indeks-dosiero kaj provas trovi koncernajn vikipaĝojn">

     <exec executable="${viki_listo}"     
        output="${v.tmp}/viki_listo.xml"
        logError="true"/>

     <xslt in="${v.tmp}/inx_kat.xml" out="${v.tmp}/inx/vikiref.json" style="${v.voko.xsl}/revo_viki_json.xsl"
        classpathref="saxon.classpath">
        <param name="viki_xml" expression="${v.tmp}/viki_listo.xml"/>
        <param name="viki_esc" expression="${v.cfg}/vikiref_esc.xml"/>
        <factory name="net.sf.saxon.TransformerFactoryImpl"/>
      </xslt>
  </target>    

  <target name="inx-tuto" depends="inx-preparo,inx-html"
     description="kopias fine chiujn enhave shanghitajn dosierojn al la
     indeksdosierujo kaj tie forigas forfalintajn">

    <copy todir="${v.bazo.inx}">
      <fileset dir="${v.tmp}/inx" includes="*">
        <different targetdir="${v.bazo.inx}" ignoreFileTimes="true"/>
      </fileset>
    </copy>

    <delete>
      <fileset dir="${v.bazo.inx}" includes="lx_*.html fx_*.html kap_*.html
         inv_*.html _*.html bildoj.html mallong.html">
         <present present="srconly" targetdir="${v.tmp}/inx"/>
      </fileset>
    </delete>

  </target>

</project>











