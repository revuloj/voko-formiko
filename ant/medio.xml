<project name="voko-medio" default="test" basedir=".">
    <description>
       Reta Vortaro, reguloj por (re)krei gxin. 
    </description>

<!-- alstrebi dosierujo-strukturon tian ???:

fonto en:
 
  xml/art
  xml/dok
  xml/xsl

rezulto en:

  html/art
  html/inx
  html/tez
  html/dok

-->



  <!-- legu agorditajn variablojn el dosiero -->
  <property file="${user.dir}/cfg/agordo" prefix="v."/>

  <!-- donu valorojn al la variabloj, se ili ne jam aperis en la agordo-dosiero -->
  <property environment="ENV"/>
  <property name="v.voko" location="${ENV.VOKO}"/>
  <property name="v.voko.ant" location="${v.voko}/ant"/>
  <property name="v.bazo" location="${user.dir}"/>
  <property name="v.bazo.dok" location="${v.bazo}/dok"/>
  <property name="v.bazo.xsl" location="${v.bazo}/xsl"/>
  <property name="v.bazo.cfg" location="${v.bazo}/cfg"/>
  <property name="v.bazo.dtd" location="${v.bazo}/dtd"/>
  <property name="v.bazo.stl" location="${v.bazo}/stl"/>
  <property name="v.bazo.smb" location="${v.bazo}/smb"/>
  <property name="v.bazo.jsc" location="${v.bazo}/jsc"/>
  <property name="v.bazo.eta" location="${v.bazo}/eta"/>

  <property name="v.bazo.xml" location="${v.bazo}/xml"/>
  <property name="v.bazo.bld" location="${v.bazo}/bld"/>

  <property name="v.voko.bin" location="${v.voko}/bin"/>
  <property name="v.voko.xsl" location="${v.voko}/xsl"/>
  <property name="v.voko.cfg" location="${v.voko}/cfg"/>
  <property name="v.voko.dok" location="${v.voko}/dok"/>
  <property name="v.voko.dtd" location="${v.voko}/dtd"/>
  <property name="v.voko.stl" location="${v.voko}/stl"/>
  <property name="v.voko.smb" location="${v.voko}/smb"/>
  <property name="v.voko.jsc" location="${v.voko}/jsc"/>
  <property name="v.voko.owl" location="${v.voko}/owl"/>
  <property name="v.voko.eta" location="${v.voko}/eta"/>

  <!-- property name="tmp" location="/home/revo/tmp/inx_tmp"/ -->
  <property name="v.tmp" location="${v.bazo}/.tmp"/>
  <property name="v.outputformat" value="html"/>

  <property name="saxon" location="${ENV.SAXONJAR}"/>
  <property name="mpost" location="/usr/bin/mpost"/>
  <property name="rsvgconv" location="/usr/bin/rsvg-convert"/>
  
  <!-- ial Formiko foje ne trovas Saxon per klaspado donita en la tasko mem,
      tial difinu mediovariablon CLASSPATH aldonante la Saxon-arkivon antau voki Formikon -->
  <path id="saxon.classpath">
     <pathelement location="${saxon}"/>
<!--     <pathelement location="${v.voko.ant}/respiro.jar"/> -->
     <pathelement path="${java.class.path}"/>
  </path>

  <target name="med-preparo">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${v.bazo.cfg}" /> 
    <mkdir dir="${v.bazo.dok}" />
    <mkdir dir="${v.bazo.dtd}" />
    <mkdir dir="${v.bazo.stl}" />
    <mkdir dir="${v.bazo.smb}" />
    <mkdir dir="${v.bazo.xml}" />
    <mkdir dir="${v.bazo.xsl}" />
  </target>


  <target name="med-agordo" description="eligas la agordeblajn variablojn por kontrolo">
    <echoproperties prefix="v."/>
  </target>

<!-- 
  "bug" in saxonb from debian: 
    - https://bugs.launchpad.net/ubuntu/+source/saxonb/+bug/412517 
    - https://www.saxonica.com/documentation9.5/using-xsl/commandline.html
    - https://www.saxonica.com/html/documentation/using-xsl/xsltfromant.html
    - https://www.saxonica.com/html/documentation/configuration/config-features.html
-->
  <target name="med-kadro" depends="med-preparo" description="kreas index.hml kaj titolo.html el enhavo.xml">
    <xslt in="${v.bazo.cfg}/enhavo.xml" out="${v.bazo}/index-malnova.html"
      style="${v.voko.xsl}/dok_enhavo.xsl" classpathref="saxon.classpath">
      <factory name="net.sf.saxon.TransformerFactoryImpl">
      <attribute name="http://saxon.sf.net/feature/allow-external-functions" 
                value="true"/>      
      </factory>
    </xslt>
  </target>


  <target name="med-bib" depends="med-preparo"
        description="bibliografio" >

    <xslt in="${v.bazo.cfg}/bibliogr.xml" out="${v.bazo.dok}/bibliogr.html"
      style="${v.voko.xsl}/bibhtml.xsl"/>

    <xslt in="${v.bazo.cfg}/bibliogr.xml" out="${v.bazo.dok}/biblaut.html"
      style="${v.voko.xsl}/bibauthtml.xsl"/>

    <xslt in="${v.bazo.cfg}/bibliogr.xml" out="${v.bazo.dok}/bibltit.html"
	  style="${v.voko.xsl}/bibtithtml.xsl"/>

    <xslt in="${v.bazo.cfg}/bibliogr.xml" out="${v.bazo.dok}/bibliogr.json"
      style="${v.voko.xsl}/bibjson.xsl"/>    

  </target>

  <target name="med-dok" depends="med-preparo"
       description="diversaj dokumentoj: manlibro, lingvolisto ktp.">

    <copy todir="${v.bazo.cfg}">
      <fileset dir="${v.voko.cfg}" casesensitive="yes">
        <include name="*.xml"/>
      </fileset>
    </copy>

    <copy todir="${v.bazo.dok}">
      <fileset dir="${v.voko.dok}" casesensitive="yes">
        <include name="*.xml"/>
        <include name="*.png"/>
      </fileset>
    </copy>

    <xslt in="${v.voko.dok}/manlibro.xml" out="${v.bazo.dok}/manlibro.html"
       style="${v.voko.xsl}/manlibro.xsl"/>

    <xslt in="${v.voko.dok}/lingva_manlibro.xml" out="${v.bazo.dok}/lingva_manlibro.html"
       style="${v.voko.xsl}/manlibro.xsl"/>

    <xslt in="${v.voko.dok}/operaciumoj.xml" out="${v.bazo.dok}/operaciumoj.html"
	  style="${v.voko.xsl}/manlibro.xsl"/>
    
     <xslt in="${v.voko.dok}/redinfo.xml" out="${v.bazo.dok}/redinfo.html"
       style="${v.voko.xsl}/manlibro.xsl"/>

     <xslt in="${v.voko.dok}/revoserv.xml" out="${v.bazo.dok}/revoserv.html"
	   style="${v.voko.xsl}/manlibro.xsl"/>

    <xslt in="${v.voko.dok}/gramatiko.xml" out="${v.bazo.dok}/gramatiko.html"
       style="${v.voko.xsl}/manlibro.xsl"/>
     
    <xslt in="${v.voko.dok}/datumprotekto.xml" out="${v.bazo.dok}/datumprotekto.html"
       style="${v.voko.xsl}/manlibro.xsl"/>

<!--
    <exec dir="${revo}/dok" executable="perl">
       <arg file="${voko_bin}/dtd2html.pl"/>
       <arg file="${revo}/dtd/vokoxml.dtd"/>
    </exec>

    <exec dir="${revo}" executable="perl">
      <arg file="${voko_bin}/doklingv.pl"/>
    </exec>
-->

    <xslt in="${v.voko.cfg}/fakoj.xml" out="${v.bazo.dok}/fakoj.html"
       style="${v.voko.xsl}/dok_fakoj.xsl">
	 <param name="agordo-pado" expression="${v.bazo.cfg}"/>
    </xslt>

    <xslt in="${v.voko.cfg}/lingvoj.xml" out="${v.bazo.dok}/lingvoj.html"
       style="${v.voko.xsl}/dok_lingvoj.xsl">
      <param name="agordo-pado" expression="${v.bazo.cfg}"/>
    </xslt>

    <xslt in="${v.voko.cfg}/stiloj.xml" out="${v.bazo.dok}/stiloj.html"
       style="${v.voko.xsl}/dok_stiloj.xsl">
      <param name="agordo-pado" expression="${v.bazo.cfg}"/>
    </xslt>

    <xslt in="${v.voko.cfg}/klasoj.xml" out="${v.bazo.dok}/klasoj.html"
       style="${v.voko.xsl}/dok_klasoj.xsl">
      <param name="agordo-pado" expression="${v.bazo.cfg}"/>
    </xslt>

    <xslt in="${v.voko.cfg}/mallongigoj.xml" out="${v.bazo.dok}/mallongigoj.html"
       style="${v.voko.xsl}/dok_mallongigoj.xsl">
      <param name="agordo-pado" expression="${v.bazo.cfg}"/>
    </xslt>

    <xslt in="${v.voko.cfg}/ordigo2.xml" out="${v.bazo.dok}/ordigo.html"
       style="${v.voko.xsl}/dok_ordigo.xsl" classpathref="saxon.classpath">
      <param name="agordo-pado" expression="${v.bazo.cfg}"/>
      <factory name="net.sf.saxon.TransformerFactoryImpl"/>
     </xslt>
  </target>


 <target name="med-dtd" depends="med-preparo"
       description="(malnova) dokumenttip-difinoj">

    <xslt in="${v.voko.cfg}/literoj.xml" out="${v.bazo.dtd}/vokosgn.dtd"
          style="${v.voko.xsl}/dtd_vokosgn.xsl"/>

<!-- ni ne nepre bezonas tion:
    <exec executable="trang" logError="true">
      <arg file="${v.voko.dtd}/vokoxml.rnc"/>
      <arg file="${v.voko.dtd}/vokoxml.rng"/>
    </exec>
-->

    <copy todir="${v.bazo.dtd}">
      <fileset dir="${v.voko.dtd}" casesensitive="yes">
        <include name="*.dtd"/>
        <include name="*.rn?"/>
      </fileset>
    </copy>

  </target>

  <target name="med-stl" depends="med-preparo"
       description="(malnova) kopias CSS-stildifinojn el voko">

    <copy todir="${v.bazo.stl}">
      <fileset dir="${v.voko.stl}" casesensitive="yes">
        <include name="*.*"/>
      </fileset>
    </copy>

  </target>

  <target name="med-smb" depends="med-preparo"
       description="(malnova) kopias simbolojn el voko">
<!--
    <apply dir="${v.voko.smb}" executable="${mpost}" dest="${v.voko.smb}">
       <srcfile/>
       <fileset dir="${v.voko.smb}" includes="*.mp"
		excludes="centoblecent.mp tezauro.mp vikio.mp"/>
       <mapper type="glob" from="*.mp" to="*.svg"/>
     </apply>

     <apply dir="${v.voko.smb}" executable="${rsvgconv}" dest="${v.voko.smb}" verbose="true">
       <arg value="-w"/>
       <arg value="100"/>
       <arg value="-h"/>
       <arg value="100"/>
       <arg value="-o"/>
       <targetfile/>
       <srcfile/>
       <fileset dir="${v.voko.smb}" includes="*.svg"/>
       <mapper type="glob" from="*.svg" to="*.png"/>
     </apply>
-->

     <copy todir="${v.bazo.smb}">
      <fileset dir="${v.voko.smb}" casesensitive="yes">
        <include name="*.png"/>
        <!-- include name="*.svg"/-->
        <include name="*.gif"/>
      </fileset>
     </copy>

  </target>

  <target name="med-svg-png" depends="med-preparo"
    description="(malnova) transformas svg bildojn al png">

      <apply dir="${v.bazo.bld}" executable="${rsvgconv}" dest="${v.bazo.bld}" verbose="true">
       <arg value="-w"/>
       <arg value="800"/>
       <arg value="-a"/>
       <arg value="-b"/>
       <arg value="#f6f6dd"/>
       <arg value="-o"/>
       <targetfile/>
       <srcfile/>
       <fileset dir="${v.bazo.bld}" includes="*.svg"/>
       <mapper type="glob" from="*.svg" to="*.svg.png"/>
     </apply>

  </target>

  <target name="med-xsl" depends="med-preparo"
       description="(malnova) kopias transformregulojn (xsl) el voko">
    <copy todir="${v.bazo.xsl}">
      <fileset dir="${v.voko.xsl}" casesensitive="yes">
        <include name="*.*"/>
      </fileset>
    </copy>
  </target>

  <target name="med-jsc" depends="med-preparo"
       description="(malnova) kopias Javoscripton por Revo-paĝoj el voko">
    <copy todir="${v.bazo.jsc}">
      <fileset dir="${v.voko.jsc}" casesensitive="yes">
        <include name="*.*"/>
      </fileset>
    </copy>
  </target>


  <target name="med-kls" depends="med-preparo"
        description="kreas liston de klasoj (vortlistoj) el rdf" >

    <xslt in="${v.voko.owl}/voko.rdf" out="${v.voko.cfg}/klasoj.xml"
      style="${v.voko.xsl}/cfg_klasoj.xsl"/>

   <copy file="${v.voko.cfg}/klasoj.xml" todir="${v.bazo.cfg}"/>

  </target>

<!--
  la enhavon de stl/smb/xsl/jsc/dtd ni ne plu kopias el voko/, sed en docker-procezujo voko-araneo
  ni kopias smb/jsc/stl/dtd rekte per reguloj en Dockerfile dum xsl/ estas ne plu sub revo/ sed nur sub voko/

  Al la publika servilo ni deplojas rekte per skripto voko-grundo/sbin/eldono servilo (k.s.)

  <target name="med-medio" depends="med-preparo,med-kadro,med-bib,med-dok,med-dtd,med-stl,med-smb,med-xsl,med-jsc"
     description="(re)kreas la medion por la vortaro, dosierujoj cfg,dok,dtd,stl,smb,xsl kun enhavo"/>
     -->

  <target name="med-medio" depends="med-preparo,med-kadro,med-bib,med-dok"
     description="(re)kreas la medion por la vortaro, dokumentaro, malnova kadro/indekso, bibliografio"/>


</project>
