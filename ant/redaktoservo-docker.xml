<project name="voko-redaktoservo-docker" default="" basedir=".">
    <description>
       Reta Vortaro, reguloj por redaktoservo, kiu kunigas chion de retposhttrakto tra refaro de la vortaro 
       ghis shovo de la rezultoj al la servilo.
    </description>
 
   <!-- property file="etc -->
   <!-- legu agorditajn variablojn el dosiero -->
   <property file="${user.dir}/cfg/agordo" prefix="v."/>
   <property environment="ENV"/>

   <!-- donu valorojn al la variabloj, se ili ne jam aperis en la agordo-dosiero -->
   <property name="v.voko" location="${ENV.VOKO}"/>
   <property name="v.voko.ant" location="${v.voko}/ant"/>
   <property name="v.voko.bin" location="${v.voko}/bin"/>
   <property name="v.bazo" location="${user.dir}"/>
   <property name="poshtprotokolo" location="${v.log}/processmail.log"/>
   <property name="ssh-key" location="/run/secrets/voko-formiko.ssh_key"/>
   <!-- speciala agordo por la redaktoservo -->
   <property file="${v.etc}/redaktoservo-agordo" prefix="srv."/>

   <!-- vi povas doni alian dosieron en la readktoserv-agordo -->
   <property name="srv.seruro" location="${v.tmp}/redaktoservo-laboranta-do-shlosita"/>
   <property name="bash" location="/bin/bash"/>
   <property name="grep" location="/usr/bin/grep"/>
   <property name="processmail" value="processmail.pl"/>
   <property name="resumo-filtro" value="1 message|messages|no mail|copy|tar-file-size|length|ftp|get|failed|total|dauxro"/>

   <target name="srv-agordo" description="eligas la agordeblajn variablojn por kontrolo">
      <echoproperties prefix="v."/>
      <echoproperties prefix="srv."/>
   </target>

   <target name="srv-shlosu" description="shlosas la servon dum ĝi laboras por eviti konkurencajn procedojn">
     <fail message="La redaktoservo estas ŝlosita. Atendu ĝis ĝi finiĝis. Esceptokaze vi povas forigi ${srv.seruro}.">
       <condition>
           <available file="${srv.seruro}"/>
       </condition>
     </fail>
     <fail>
       <condition>
         <not>
           <http url="${srv.revo-tempo.url}" errorsBeginAt="500"/>
         </not>
       </condition>
     </fail>

     <touch file="${srv.seruro}"/>
   </target>

   <target name="srv-malshlosu" description="malŝlosas la servon post la laboro kaj permesas rekomencadon">
     <delete file="${srv.seruro}" verbose="true"/>
   </target>

   <target name="srv-malshlosu-postnokte" description="malŝlosas la servon post kiam ĝi ne malŝlosighis post noktomezo. Tio okazas neregule pro eraroj ekz. nefunkcianta retkonekto." depends="srv-preparo">
     <delete verbose="true">
	<fileset file="${srv.seruro}">
	    <date datetime="${v.dato}" pattern="yyyyMMdd" when="before"/>
	</fileset>
     </delete>
   </target>

   <target name="srv-preparo">
    <tstamp>
       <format property="v.dato" pattern="yyyyMMdd"/>
     </tstamp>
     <tstamp>
       <format property="v.tempo" pattern="HHmmss"/>
     </tstamp>
     <tstamp>
       <format property="v.hierau" pattern="yyyyMMdd" offset="-1" unit="day"/>
     </tstamp>
   </target>

   <target name="srv-preni-poshton" description="Prenas la retposhton de la redaktantoj ">

<!-- la sekvaj estas farataj intervale de tomocero, do ni forigos... 
     redaktanto-listo eniru per docker-sekreto aŭ alivoje...
-->

     <!-- prenu liston de redaktantoj 
     <ant antfile="${v.voko.ant}/spegulo.xml" inheritAll="false">
       <property name="v.bazo" location="${v.bazo}"/>
       <target name="revo-redaktantoj"/>
     </ant -->

     <!-- tushu poshtservilon 
     <exec dir="${v.bazo}" executable="${srv.ping}">
       <arg value="-qc5"/>
       <arg value="-i1"/>
       <arg value="${srv.poshtoservilo}"/>
     </exec -->

     <!-- prenu retposhton kaj shovu al loka poshtfako 
     <exec dir="${v.bazo}" executable="${srv.fetchmail}"/>
     <exec dir="${v.bazo}" executable="${srv.sudo}">
       <arg value="${srv.sendmail}"/>
       <arg value="-q"/>
     </exec> 

     <sleep seconds="3"/ -->

     <available property="user-mail-file-exists" file="${srv.loka-poshto-dosiero}"/>

   </target>
 
   <target name="srv-trakti-poshton" depends="srv-preni-poshton"
        if="user-mail-file-exists"
        description="Traktas retposhton de la redaktantoj post preno">
      
      <!-- processmail estas en afido, do ni bezonas nun ssh por lanĉi 
      <exec dir="${v.bazo}" executable="${v.voko.bin}/processmail.pl"
         output="${poshtprotokolo}" append="true"/ -->
<!-- 
      <loadfile srcFile="${srv.poshtprotokolo}" property="poshtprotokolo"/>
      <echo>
         ${poshtprotokolo}
      </echo>
-->
    <!-- sshexec host="afido"
         username="afido"
         keyfile="${ssh-key}"
         command="${processmail}" / -->

    <exec executable="ssh">
      <arg value="-i"/>
      <arg file="${ssh-key}"/>
      <arg value="afido@afido"/>
      <arg value="${processmail}"/>
    </exec>
   </target>

   <target name="srv-refari-vortaron" depends="srv-preparo,srv-trakti-poshton"
      if="user-mail-file-exists"
      description = "refaras la vortaron post poshtotrakto">

     <ant antfile="${v.voko.ant}/spegulo.xml" inheritAll="false">
        <property name="v.bazo" location="${v.bazo}"/>
        <property name="cvs.dato" value="${v.dato}"/>
        <property name="cvs.tempo" value="${v.tempo}"/>
        <target name="cvs-tar"/>
     </ant>

     <ant antfile="${v.voko.ant}/vortaro.xml" inheritAll="false">
        <property name="v.bazo" location="${v.bazo}"/>
        <target name="limigita"/>
        <target name="pakajhoj"/>
<!--        <target name="tezauro"/> -->
     </ant>

     <ant antfile="${v.voko.ant}/spegulo.xml" inheritAll="false">
        <property name="v.bazo" location="${v.bazo}"/>
        <property name="revo.dato" value="${v.dato}"/>
        <property name="revo.tempo" value="${v.tempo}"/> <!-- uzata en la dosiernomo de la arkivo, do devas koincidi en revo-tar kaj revo-upload -->
        <target name="revo-tar"/>
        <target name="revo-viki-ligoj"/>
     </ant>
<!--
     <ant antfile="${v.voko.ant}/sqlite.xml" inheritAll="false">
       <property name="v.bazo" location="${v.bazo}"/>
       <target name="sql-tuto"/>
     </ant>
    --> 
   </target>

   <target name="srv-sqlite-db" depends="srv-preparo"
      description = "kreas sqlite-datumbazon kun la enhavo de la vortaro / indeksoj">
     <ant antfile="${v.voko.ant}/sqlite.xml" inheritAll="false">
        <property name="v.bazo" location="${v.bazo}"/>
        <target name="sql-tuto"/>
      </ant>
   </target>

   <target name="srv-sqlite-db-tuto" depends="srv-preparo"
      description = "kreas sqlite-datumbazon kun la enhavo de la vortaro / indeksoj tra ĉiuj paŝoj de XML ĝis ZIP">
      <ant antfile="${v.voko.ant}/indeksoj.xml" inheritAll="false">
        <property name="v.bazo" location="${v.bazo}"/>
        <target name="inx-eltiro"/>
      </ant>
      <ant antfile="${v.voko.ant}/artikoloj.xml" inheritAll="false">
        <property name="v.bazo" location="${v.bazo}"/>
        <target name="art-tuto"/>
      </ant>
      <ant antfile="${v.voko.ant}/sqlite.xml" inheritAll="false">
        <property name="v.bazo" location="${v.bazo}"/>
        <target name="sql-tuto"/>
      </ant>
   </target>   

   <target name="srv-refari-nur-artikolojn" depends="srv-preparo,srv-trakti-poshton"
      if="user-mail-file-exists"
      description = "refaras nur la redaktitajn artikolojn, ne la indeksojn post poshtotrakto">
<!-->
     <ant antfile="${v.voko.ant}/spegulo.xml" inheritAll="false">
        <property name="v.bazo" location="${v.bazo}"/>
        <property name="cvs.dato" value="${v.dato}"/>
        <property name="cvs.tempo" value="${v.tempo}"/>
        <target name="cvs-tar"/>
     </ant>
-->
     <ant antfile="${v.voko.ant}/vortaro.xml" inheritAll="false">
        <property name="v.bazo" location="${v.bazo}"/>
        <target name="artikoloj"/>
     </ant>

<!--
     <ant antfile="${v.voko.ant}/spegulo.xml" inheritAll="false">
        <property name="v.bazo" location="${v.bazo}"/>
        <property name="revo.dato" value="${v.dato}"/>
        <property name="revo.tempo" value="${v.tempo}"/> - uzata en la dosiernomo de la arkivo, do devas koincidi en revo-tar kaj revo-upload 
        <target name="revo-resendu-malplenajn"/>
        <target name="revo-tar"/>
     </ant>
     -->
   </target>

   <target name="srv-art-listo" depends="srv-preparo"
      if="art-listo"
      description = "refaras nur la artikolojn el la listo donita kiel argumento art-listo (vd bin/git_shanghitaj.sh)">

      <ant antfile="${v.voko.ant}/artikoloj.xml" inheritAll="false">
        <property name="v.bazo" location="${v.bazo}"/>
        <target name="art-listo"/>
     </ant>

     <ant antfile="${v.voko.ant}/spegulo.xml" inheritAll="false">
        <property name="v.bazo" location="${v.bazo}"/>
        <property name="revo.dato" value="${v.dato}"/>
        <property name="revo.tempo" value="${v.tempo}"/> <!-- uzata en la dosiernomo de la arkivo, do devas koincidi en revo-tar-gh kaj revo-upload -->
        <target name="revo-tar-art"/>
        <!-- ne plu sendu al la origina servilo: target name="revo-upload"/ -->
        <target name="revo-upload2"/> <!-- tio sendas al la nova 1blu-servilo -->
     </ant>
   </target>   

   <target name="srv-upload"
      description="alŝutas kaj malpakas la antaŭe faritajn tar-dosierojn ĉe reta-vortaro.de">

     <!-- forsendi respondojn al redaktantoj, necesas poshtkontrolo antau forsendo pro legitimigo! -->
      <!-- <exec dir="${v.bazo}" executable="${srv.fetchmail}">
        <arg value="-c"/>
        <arg value="post.strato.de"/>
      </exec> -->
      <!-- exec dir="${v.bazo}" executable="${srv.sudo}">
        <arg value="${srv.sendmail}"/>
        <arg value="-q"/>
      </exec -->

      <!-- sendi shanghojn de arhhivo al servilo -->
      <ant antfile="${v.voko.ant}/spegulo.xml" inheritAll="false">
        <property name="v.bazo" location="${v.bazo}"/>
        <property name="revo.dato" value="${v.dato}"/>
        <property name="revo.tempo" value="${v.tempo}"/>
        <!-- ne plu sendu al la origina servilo: target name="revo-upload"/ -->
        <target name="revo-upload2"/> <!-- tio sendas al la nova 1blu-servilo -->
      </ant>
   </target>

   <target name="srv-servo" depends="srv-agordo,srv-malshlosu-postnokte,srv-shlosu,srv-preparo,srv-refari-vortaron,srv-upload,srv-malshlosu"
      if="user-mail-file-exists"
      description="Kuro de la tuta servo: preni kaj trakti poshton, refari vortaron, sendi dosierojn kaj respondojn">
   </target> 

   <target name="srv-servo-art" depends="srv-agordo,srv-shlosu,srv-preparo,srv-refari-nur-artikolojn,srv-upload,srv-malshlosu"
      if="user-mail-file-exists"
      description="Interkuro (nur artikoloj, ne indeksoj) de la servo: preni kaj trakti poshton, refari artikolojn, sendi dosierojn kaj respondojn">
   </target> 


   <target name="srv-servo-github" depends="srv-agordo,srv-preparo"
      description="Kuro de la tuta servo ene de Github-ago: fari kompletan vortaron kaj krei arĥivon">

     <ant antfile="${v.voko.ant}/vortaro.xml" inheritAll="false">
        <property name="v.bazo" location="${v.bazo}"/>
        <property name="sha" value="${sha}"/>
        <target name="inxtez-bazo"/>
     </ant>  
   </target>   

   
   <target name="srv-servo-github-diurne" depends="srv-agordo,srv-preparo" 
      description="Kuro de la tuta servo ene de Github-ago: kreu la vortaron en du diversaj eldonoj (sha1,sha2) kaj paki+alŝuti nur la ŝanĝojn"
      if="sha1">

      <!-- se ambaŭ tempo-punktoj identas, ni rezignas pri la procedo per "fail" -->
      <fail message="La eldonoj samas, ni ne bezonas krei diferencon: ${sha1} = ${sha2}">
        <condition> 
          <equals arg1="${sha1}" arg2="${sha2}"/>
        </condition>
      </fail>      

      <!-- ### 1a kalkulu la bazon ### -->

     <ant antfile="${v.voko.ant}/vortaro.xml" inheritAll="false">
        <property name="v.bazo" location="${v.bazo}"/>
        <property name="sha" value="${sha1}"/>
        <target name="inxtez-bazo"/>
     </ant>  

     <ant antfile="${v.voko.ant}/spegulo.xml" inheritAll="false">   
        <property name="v.bazo" location="${v.bazo}"/>
        <target name="revo-referenco"/>
     </ant>

     <!-- ### 2a kalkulu la diferencon ### -->

     <ant antfile="${v.voko.ant}/vortaro.xml" inheritAll="false">
        <property name="v.bazo" location="${v.bazo}"/>
        <property name="sha" value="${sha2}"/>
        <target name="inxtez-pluso"/>
     </ant>  

     <ant antfile="${v.voko.ant}/spegulo.xml" inheritAll="false">   
        <property name="v.bazo" location="${v.bazo}"/>
        <property name="revo.dato" value="${v.dato}"/>
        <property name="revo.tempo" value="${v.tempo}"/> <!-- uzata en la dosiernomo 
          de la arkivo, do devas koincidi en revo-tar-gh kaj revo-upload -->
        <target name="revo-diferenco"/>
        <!-- ne plu sendu al la origina servilo: target name="revo-upload"/ -->
        <target name="revo-upload2"/> <!-- tio sendas al la nova 1blu-servilo -->
        <target name="revo-viki-ligoj"/> <!-- aktualigu Vikipedio-referencojn -->
     </ant>        

<!--  ni rezignas tie ĉi pri la pakaĵo, ni nun alpendigas plurajn ZIP-dosierojn al ĉiutatagaj eldonoj anst.
     <ant antfile="${v.voko.ant}/pakajhoj.xml" inheritAll="false">   
        <property name="v.bazo" location="${v.bazo}"/>
        <target name="pak-agordo"/>
        <target name="pak-html"/>
     </ant>         
     -->

   </target>     


   <target name="srv-servo-github-medinxtez" depends="srv-agordo,srv-preparo"
      description="Kuro de la tuta servo ene de Github-ago: fari ĉiujn artikolojn kaj krei arĥivon">

     <ant antfile="${v.voko.ant}/vortaro.xml" inheritAll="false">
        <property name="v.bazo" location="${v.bazo}"/>
        <property name="sha" value="${sha1}"/>
        <target name="inxtez-bazo"/>
     </ant>  

     <ant antfile="${v.voko.ant}/pakajhoj.xml" inheritAll="false">   
        <property name="v.bazo" location="${v.bazo}"/>
        <target name="pak-agordo"/>
        <target name="pak-html"/>
     </ant>         

   </target>    
 

   <target name="srv-servo-github-art" depends="srv-agordo,srv-preparo"
      description="Kuro de la tuta servo ene de Github-ago: fari ĉiujn artikolojn kaj krei arĥivon">

     <ant antfile="${v.voko.ant}/vortaro.xml" inheritAll="false">
        <property name="v.bazo" location="${v.bazo}"/>
        <property name="sha" value="${sha}"/>
        <target name="art-bazo"/>
     </ant>  

     <ant antfile="${v.voko.ant}/pakajhoj.xml" inheritAll="false">   
        <property name="v.bazo" location="${v.bazo}"/>
        <target name="pak-agordo"/>
        <target name="pak-art"/>
     </ant>         

   </target>    

   <target name="srv-servo-github-hst" depends="srv-agordo,srv-preparo"
      description="Kuro de la tuta servo ene de Github-ago: fari ĉiujn artikolhistoriojn kaj krei arĥivon">

     <ant antfile="${v.voko.ant}/vortaro.xml" inheritAll="false">
        <property name="v.bazo" location="${v.bazo}"/>
        <property name="sha" value="${sha}"/>
        <target name="hst-bazo"/>
     </ant>  

     <ant antfile="${v.voko.ant}/pakajhoj.xml" inheritAll="false">   
        <property name="v.bazo" location="${v.bazo}"/>
        <target name="pak-agordo"/>
        <target name="pak-hst"/>
     </ant>         

   </target>    


   <target name="srv-servo-github-hore" depends="srv-agordo,srv-preparo" 
      description="Kuro de la servo ene de Github-ago: aktualigu ŝanĝitajn artikolojn kaj historiojn inter ${sha1} kaj ${sha2}, kaj forigu malaperintajn artikolojn"
      if="sha1">

      <!-- se ambaŭ tempo-punktoj identas, ni rezignas pri la procedo per "fail" -->
      <fail message="La eldonoj samas, ni ne bezonas aktualigon: ${sha1} = ${sha2}">
        <condition> 
          <equals arg1="${sha1}" arg2="${sha2}"/>
        </condition>
      </fail>      

     <ant antfile="${v.voko.ant}/vortaro.xml" inheritAll="false">
        <property name="v.bazo" location="${v.bazo}"/>
        <property name="sha1" value="${sha1}"/>
        <property name="sha2" value="${sha2}"/>
        <target name="art-hst-aktualigo"/>
     </ant>  

     <ant antfile="${v.voko.ant}/spegulo.xml" inheritAll="false">   
        <property name="v.bazo" location="${v.bazo}"/>
        <property name="revo.dato" value="${v.dato}"/>
        <property name="revo.tempo" value="${v.tempo}"/> <!-- uzata en la dosiernomo 
          de la arkivo, do devas koincidi en revo-tar-gh kaj revo-upload -->
        <target name="revo-tar-art-hst"/>
        <!-- ne plu sendu al la origina servilo: target name="revo-upload"/ -->
        <target name="revo-upload2"/> <!-- tio sendas al la nova 1blu-servilo -->
     </ant>   
   </target>     


   <target name="srv-resumo" depends="srv-preparo">

     <path id="logfiles-hodiau">
       <fileset dir="${v.log}"> 
         <include name="redsrv-${v.dato}*.log" />
       </fileset>
     </path>

     <path id="logfiles-hierau">
       <fileset dir="${v.log}"> 
         <include name="redsrv-${v.hierau}*.log" />
       </fileset>
     </path>

     <pathconvert property="logfiles-hodiau" refid="logfiles-hodiau" pathsep=" ">
       <map from="${v.log}/" to=""/>
     </pathconvert>

     <pathconvert property="logfiles-hierau" refid="logfiles-hierau" pathsep=" ">
       <map from="${v.log}/" to=""/>
     </pathconvert>

     <!-- echo message="files: ${logfiles-hodiau}"/ -->

     <echo>
PROBLEMOJ ESTIS:
----------------
</echo>

     <exec dir="${v.log}" executable="${grep}" osfamily="Unix">
       <arg line='-i -E -H -n10 "failed" ${logfiles-hodiau} ${logfiles-hierau}'/>
     </exec>
 
     <echo>

KUROJ DE LA SERVO:
-------------------
(hodiau)
     </echo>
     <exec dir="${v.log}" osfamily="Unix" executable="${grep}"
           outputproperty="grep.hodiau.output">
       <arg line='-i -E -H "${resumo-filtro}" ${logfiles-hodiau}'/>
     </exec>

     <loadresource property="echo.hodiau.output">
       <propertyresource name="grep.hodiau.output"/>
       <filterchain>
            <replacestring from="redsrv-" to=".."/>
            <replacestring from="Total time:" to=" &gt;&gt;"/>
            <replacestring from="minutes" to="min"/>
            <replacestring from="minute" to="min"/>
            <replacestring from="seconds" to="s &lt;&lt;"/>
            <replacestring from="second" to="s &lt;&lt;"/>
            <replacestring from="[exec]" to=" [exc]"/>
            <replacestring from="[copy]" to=" [cpy]"/>
            <replacestring from="[length]" to="   [len]"/>
            <replacestring from="[echoproperties]" to="      [len]"/>
            <replacestring from="/home/revo/" to=""/>
       </filterchain>
     </loadresource>

     <echo message="${echo.hodiau.output}"/>

     <echo>

(hierau)
     </echo>
     <exec dir="${v.log}" osfamily="Unix" executable="${grep}" 
           outputproperty="grep.hierau.output">
       <arg line='-i -E -H "${resumo-filtro}" ${logfiles-hierau}'/>
     </exec>

     <loadresource property="echo.hierau.output">
       <propertyresource name="grep.hierau.output"/>
       <filterchain>
            <replacestring from="redsrv-" to=".."/>
            <replacestring from="Total time:" to=" &gt;&gt;"/>
            <replacestring from="minutes" to="min"/>
            <replacestring from="minute" to="min"/>
            <replacestring from="seconds" to="s &lt;&lt;"/>
            <replacestring from="second" to="s &lt;&lt;"/>
            <replacestring from="[exec]" to=" [exc]"/>
            <replacestring from="[copy]" to=" [cpy]"/>
            <replacestring from="[length]" to="   [len]"/>
            <replacestring from="[echoproperties]" to="      [len]"/>
            <replacestring from="/home/revo/" to=""/>
       </filterchain>
     </loadresource>
   <echo message="${echo.hierau.output}"/>

   <echo>

VERSIO-KONTROLO:
----------------
</echo>

      <ant antfile="${v.voko.ant}/spegulo.xml" inheritAll="false">
        <property name="v.bazo" location="${v.bazo}"/>
        <property name="revo.dato" value="${v.dato}"/>
        <property name="revo.tempo" value="${v.tempo}"/> 
        <target name="revo-kontrolu-versiojn"/>
      </ant>

   </target>


   <target name="srv-purigu" description="forigas malnovajn arhhivojn kaj protokolojn"
       depends="srv-preparo">

     <tstamp>
       <format property="srv.antauamonato" pattern="yyyyMM" offset="-1" unit="month"/>
     </tstamp>
     <tstamp>
       <format property="srv.nunamonato" pattern="yyyyMM"/>
     </tstamp>
     <tstamp>
       <format property="srv.antaujaro" pattern="yyyyMM" offset="-12" unit="month"/>
     </tstamp>

     <tarfileset id="srv.oldlog" dir="${v.log}" includes="**/*.* **/*" excludes="**/*.tgz">
        <date when="before" datetime="${srv.nunamonato}" pattern="yyyyMM"/>
     </tarfileset> 


     <!-- paku kaj forigu dosierojn en log de antau la nuna monato -->
     <property name="srv.oldlogtar" value="log-${srv.antauamonato}.tgz"/>
     <tar destfile="${v.log}/${srv.oldlogtar}" 
        compression="gzip">
        <tarfileset refid="srv.oldlog"/>
     </tar>

     <delete verbose="true">
        <tarfileset refid="srv.oldlog"/>
     </delete>


     <!-- forigu arhhivojn en log de antau 12 monatoj -->
     <delete verbose="true">
       <fileset dir="${v.log}" includes="*.tgz">
         <date when="before" datetime="${srv.antaujaro}" pattern="yyyyMM"/>
       </fileset> 
     </delete>


     <!-- forigu dosierojn en tmp de antau 2 monatoj -->
     <delete verbose="true"> 
       <fileset dir="${v.tmp}/.." includes="mirror/*/*.* mailatt/*">
         <date when="before" datetime="${srv.antauamonato}" pattern="yyyyMM"/>
       </fileset> 
     </delete>

   </target>

</project>
   











